// Generated by CoffeeScript 1.3.3
var VST_LOADED, bring_to_back, bring_to_top, check_time_conflict, click_event, dehighlight, delete_sect, generate_table, get_random_color, go_to, highlight, hsv_to_rgb, process_datetime, tc, tt, visible,
  __slice = [].slice;

if (!VST_LOADED) {
  VST_LOADED = true;
  tt = [[], [], [], [], [], [], []];
  tc = [[], [], [], [], [], [], []];
  visible = true;
  go_to = function(dept, ccode, call_back) {
    var semcode, url;
    if (ccode == null) {
      ccode = '';
    }
    if (call_back == null) {
      call_back = '';
    }
    dept = dept.toUpperCase();
    semcode = window.location.href.match(/https:\/\/w5.ab.ust.hk\/wcq\/cgi-bin\/(\d+)\//)[1];
    url = "https://w5.ab.ust.hk/wcq/cgi-bin/" + semcode + "/subject/" + dept;
    $('div#classes').load(url + ' div#classes', function() {
      document.title = dept + document.title.slice(4);
      $('tr.sectodd, tr.secteven').css({
        'cursor': 'pointer'
      }).unbind('click').click(click_event);
      if (!ccode) {
        $(window).scrollTop(0);
      } else {
        $(window).scrollTop($("a[name=" + (dept + ccode) + "]").offset().top - navHeight);
      }
      if (call_back) {
        return call_back();
      }
    });
    return false;
  };
  hsv_to_rgb = function(h, s, v) {
    var b, f, g, h_i, p, q, r, rgb, t, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
    h_i = Math.floor(h * 6);
    f = h * 6 - h_i;
    p = v * (1 - s);
    q = v * (1 - f * s);
    t = v * (1 - (1 - f) * s);
    if (h_i === 0) {
      _ref = [v, t, p], r = _ref[0], g = _ref[1], b = _ref[2];
    }
    if (h_i === 1) {
      _ref1 = [q, v, p], r = _ref1[0], g = _ref1[1], b = _ref1[2];
    }
    if (h_i === 2) {
      _ref2 = [p, v, t], r = _ref2[0], g = _ref2[1], b = _ref2[2];
    }
    if (h_i === 3) {
      _ref3 = [p, q, v], r = _ref3[0], g = _ref3[1], b = _ref3[2];
    }
    if (h_i === 4) {
      _ref4 = [t, p, v], r = _ref4[0], g = _ref4[1], b = _ref4[2];
    }
    if (h_i === 5) {
      _ref5 = [v, p, q], r = _ref5[0], g = _ref5[1], b = _ref5[2];
    }
    return rgb = [Math.floor(r * 256), Math.floor(g * 256), Math.floor(b * 256)];
  };
  get_random_color = function() {
    /*
                based on http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/
    */

    var color, golden_ratio_conjugate, h, rgb;
    golden_ratio_conjugate = 0.618033988749895;
    h = Math.random();
    h += golden_ratio_conjugate;
    h %= 1;
    rgb = hsv_to_rgb(h, 0.3, 0.99);
    return color = "#" + rgb[0].toString(16) + rgb[1].toString(16) + rgb[2].toString(16);
  };
  check_time_conflict = function(t1, t2) {
    var _ref, _ref1, _ref2, _ref3;
    if (((t2.start_time <= (_ref = t1.start_time) && _ref <= t2.end_time)) || ((t2.start_time <= (_ref1 = t1.end_time) && _ref1 <= t2.end_time)) || ((t1.start_time <= (_ref2 = t2.start_time) && _ref2 <= t1.end_time)) || ((t1.start_time <= (_ref3 = t2.end_time) && _ref3 <= t1.end_time))) {
      return true;
    } else {
      return false;
    }
  };
  process_datetime = function(dt, room, section, ccode, color) {
    var ETapm, EThh, ETmm, STapm, SThh, STmm, dow, end_time, evens, i, mapping, parts, result, start_time, x, _i, _len, _ref, _ref1;
    if (dt === 'TBA') {
      return [];
    }
    result = [];
    mapping = {
      'Mo': 0,
      'Tu': 1,
      'We': 2,
      'Th': 3,
      'Fr': 4,
      'Sa': 5,
      'Su': 6
    };
    parts = dt.split(' ');
    parts.splice(2, 1);
    STapm = parts[1].slice(-2);
    _ref = parts[1].slice(0, -2).split(':'), SThh = _ref[0], STmm = _ref[1];
    if (STapm === 'PM' && SThh !== '12') {
      start_time = (parseInt(SThh, 10) + 12) * 2;
    } else {
      start_time = (parseInt(SThh, 10)) * 2;
    }
    if (STmm === '30') {
      start_time += 1;
    }
    ETapm = parts[2].slice(-2);
    _ref1 = parts[2].slice(0, -2).split(':'), EThh = _ref1[0], ETmm = _ref1[1];
    if (ETapm === 'PM' && EThh !== '12') {
      end_time = (parseInt(EThh, 10) + 12) * 2;
    } else {
      end_time = (parseInt(EThh, 10)) * 2;
    }
    if (ETmm === '50') {
      end_time += 1;
    }
    evens = (function() {
      var _i, _ref2, _results;
      _results = [];
      for (x = _i = 0, _ref2 = parts[0].length; _i < _ref2; x = _i += 2) {
        _results.push(x);
      }
      return _results;
    })();
    for (_i = 0, _len = evens.length; _i < _len; _i++) {
      i = evens[_i];
      dow = mapping[parts[0].slice(i, (i + 1) + 1 || 9e9)];
      result.push({
        dow: dow,
        start_time: start_time,
        end_time: end_time,
        room: room,
        section: section,
        ccode: ccode,
        color: color
      });
    }
    return result;
  };
  click_event = function() {
    var $first_row, $rest, $row, $rows, course_code, course_color, course_name, datetime, l, lesson, no_time_conflict, room, sect, section, td_arr, timeslots, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref;
    if (!visible) {
      return;
    }
    tc = [[], [], [], [], [], [], []];
    timeslots = [];
    course_name = $(this).parents('.course').find('h2').text();
    course_code = course_name.slice(0, course_name.indexOf('-') - 1);
    course_color = get_random_color();
    $first_row = $(this);
    if (!$first_row.is('.newsect')) {
      $first_row = $first_row.prevAll('.newsect:first');
    }
    sect = $first_row.find('td:first').text();
    $rows = [$first_row];
    $rest = $first_row.nextUntil('.newsect');
    if ($rest.length) {
      $rows = $rows.concat($rest.clone().prepend("<td>" + sect + "</td>"));
    }
    for (_i = 0, _len = $rows.length; _i < _len; _i++) {
      $row = $rows[_i];
      td_arr = $row.find('td').map(function() {
        return $(this).text();
      }).get();
      section = td_arr[0], datetime = td_arr[1], room = td_arr[2];
      if (datetime.match(/\d{2}\-\w{3}\-\d{4} \- \d{2}\-\w{3}\-\d{4}/)) {
        datetime = datetime.slice(25);
      }
      timeslots = timeslots.concat(process_datetime(datetime, room, section, course_code, course_color));
    }
    no_time_conflict = true;
    for (_j = 0, _len1 = timeslots.length; _j < _len1; _j++) {
      lesson = timeslots[_j];
      _ref = tt[lesson.dow];
      for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
        l = _ref[_k];
        if (check_time_conflict(l, lesson)) {
          no_time_conflict = false;
        }
      }
    }
    if (!no_time_conflict) {
      for (_l = 0, _len3 = timeslots.length; _l < _len3; _l++) {
        lesson = timeslots[_l];
        tc[lesson.dow].push(lesson);
      }
    } else {
      for (_m = 0, _len4 = timeslots.length; _m < _len4; _m++) {
        lesson = timeslots[_m];
        tt[lesson.dow].push(lesson);
      }
    }
    generate_table();
    return false;
  };
  delete_sect = function(sect) {
    var dow, l, l_tc, l_tt, no_time_conflict, temp_arr, _i, _j, _k, _l, _len, _len1, _len2, _m, _ref, _ref1, _ref2;
    if (typeof console !== "undefined" && console !== null) {
      console.log(sect);
    }
    for (dow = _i = 0; _i <= 6; dow = ++_i) {
      temp_arr = [];
      _ref = tt[dow];
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        l = _ref[_j];
        if (l.section !== sect) {
          temp_arr.push(l);
        }
      }
      tt[dow] = temp_arr.slice(0);
    }
    no_time_conflict = true;
    for (dow = _k = 0; _k <= 6; dow = ++_k) {
      _ref1 = tc[dow];
      for (_l = 0, _len1 = _ref1.length; _l < _len1; _l++) {
        l_tc = _ref1[_l];
        _ref2 = tt[dow];
        for (_m = 0, _len2 = _ref2.length; _m < _len2; _m++) {
          l_tt = _ref2[_m];
          if (check_time_conflict(l_tt, l_tc)) {
            no_time_conflict = false;
          }
        }
      }
    }
    if (no_time_conflict) {
      tc = [[], [], [], [], [], [], []];
    }
    generate_table();
    return false;
  };
  generate_table = function() {
    var DAYS, SAT, SUN, col, dow, earliest_start_time, empty_cell, header, l, latest_end_time, make_div_content, make_time_str, range, row, _i, _j, _k, _l, _len, _len1, _len2, _m, _n, _ref, _ref1, _ref2;
    earliest_start_time = Math.min.apply(Math, [18].concat(__slice.call((function() {
      var _i, _len, _ref, _ref1, _results;
      _ref1 = (_ref = []).concat.apply(_ref, tt);
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        l = _ref1[_i];
        _results.push(l.start_time);
      }
      return _results;
    })()), __slice.call((function() {
      var _i, _len, _ref, _ref1, _results;
      _ref1 = (_ref = []).concat.apply(_ref, tc);
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        l = _ref1[_i];
        _results.push(l.start_time);
      }
      return _results;
    })())));
    latest_end_time = Math.max.apply(Math, [37].concat(__slice.call((function() {
      var _i, _len, _ref, _ref1, _results;
      _ref1 = (_ref = []).concat.apply(_ref, tt);
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        l = _ref1[_i];
        _results.push(l.end_time);
      }
      return _results;
    })()), __slice.call((function() {
      var _i, _len, _ref, _ref1, _results;
      _ref1 = (_ref = []).concat.apply(_ref, tc);
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        l = _ref1[_i];
        _results.push(l.end_time);
      }
      return _results;
    })())));
    DAYS = ['Time', 'MON', 'TUE', 'WED', 'THU', 'FRI'];
    SUN = tt[6].length !== 0 || tc[6].length !== 0;
    SAT = tt[5].length !== 0 || tc[5].length !== 0;
    if (SUN) {
      DAYS.push('SAT', 'SUN');
    } else if (SAT) {
      DAYS.push('SAT');
    }
    range = DAYS.length - 1;
    empty_cell = '\u00A0';
    $('#container').empty();
    make_time_str = function(hr) {
      var min, time_str;
      hr = Math.floor(row / 2);
      if (hr <= 9) {
        hr = '0' + hr.toString();
      } else {
        hr = hr.toString();
      }
      min = row % 2;
      if (min === 0) {
        time_str = hr + ':00-' + hr + ':20';
      } else {
        time_str = hr + ':30-' + hr + ':50';
      }
      return time_str;
    };
    DOMinate([
      document.getElementById('container'), [
        'table', ['thead'].concat((function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = DAYS.length; _i < _len; _i++) {
            header = DAYS[_i];
            _results.push(['th', header]);
          }
          return _results;
        })()), ['tbody'].concat((function() {
          var _i, _results;
          _results = [];
          for (row = _i = earliest_start_time; earliest_start_time <= latest_end_time ? _i <= latest_end_time : _i >= latest_end_time; row = earliest_start_time <= latest_end_time ? ++_i : --_i) {
            _results.push(['tr'].concat([['td', make_time_str(row)]], (function() {
              var _j, _results1;
              _results1 = [];
              for (col = _j = 1; 1 <= range ? _j <= range : _j >= range; col = 1 <= range ? ++_j : --_j) {
                _results1.push([
                  'td', [
                    'div', empty_cell, {
                      'class': 'outer'
                    }
                  ], {
                    'id': "c" + col
                  }
                ]);
              }
              return _results1;
            })(), [
              {
                'id': "r" + row
              }
            ]));
          }
          return _results;
        })()), {
          'id': 'vst',
          'class': 'table table-bordered table-condensed'
        }
      ]
    ]);
    make_div_content = function(l) {
      var c;
      c = "" + l.ccode + "<br />" + l.section.slice(0, l.section.indexOf(' '));
      return c;
    };
    for (dow = _i = 0; 0 <= range ? _i < range : _i > range; dow = 0 <= range ? ++_i : --_i) {
      _ref = tt[dow];
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        l = _ref[_j];
        $("<div id='" + l.section + "' class='mydiv' style='background-color: " + l.color + "; height: " + ((l.end_time - l.start_time + 1) * 20 + l.end_time - l.start_time) + "px'>" + (make_div_content(l)) + "</div>").appendTo("\#r" + l.start_time + " \#c" + (l.dow + 1) + " div.outer");
      }
    }
    for (dow = _k = 0; 0 <= range ? _k < range : _k > range; dow = 0 <= range ? ++_k : --_k) {
      _ref1 = tc[dow];
      for (_l = 0, _len1 = _ref1.length; _l < _len1; _l++) {
        l = _ref1[_l];
        $("<div class='time-conflict' style='height: " + ((l.end_time - l.start_time + 1) * 20 + l.end_time - l.start_time) + "px'>\u00A0</div>").appendTo("\#r" + l.start_time + " \#c" + (l.dow + 1) + " div.outer");
      }
    }
    for (dow = _m = 0; 0 <= range ? _m < range : _m > range; dow = 0 <= range ? ++_m : --_m) {
      _ref2 = tt[dow];
      for (_n = 0, _len2 = _ref2.length; _n < _len2; _n++) {
        l = _ref2[_n];
        $("<div id='" + l.section + "' class='topmost popup' style='height: " + ((l.end_time - l.start_time + 1) * 20 + l.end_time - l.start_time) + "px'><div class='popupdetail'><a href='#' class='goto'>DETAILS</a>\u00A0<a href='#' class='del'>DROP</a></div></div>").data({
          'section': l.section,
          'ccode': l.ccode
        }).appendTo("\#r" + l.start_time + " \#c" + (l.dow + 1) + " div.outer");
      }
    }
    $('.del').click(function() {
      delete_sect($(this).parents('.popup').first().data('section'));
      return false;
    });
    $('.goto').click(function() {
      go_to.apply(null, $(this).parents('.popup').first().data('ccode').split(' '));
      return false;
    });
    return false;
  };
  /*
          ENTRY POINT
  */

  $("<style>\n/*!\n * Bootstrap v2.2.2\n *\n * Copyright 2012 Twitter, Inc\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\n */\n.clearfix{*zoom:1;}.clearfix:before,.clearfix:after{display:table;content:\"\";line-height:0;}\n.clearfix:after{clear:both;}\n.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0;}\n.input-block-level{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}\ntable{max-width:100%;background-color:transparent;border-collapse:collapse;border-spacing:0;}\n.table{width:100%;margin-bottom:5px;}.table th,.table td{padding:8px;line-height:20px;text-align:left;vertical-align:top;border-top:1px solid #dddddd;}\n.table th{font-weight:bold;}\n.table thead th{vertical-align:bottom;}\n.table caption+thead tr:first-child th,.table caption+thead tr:first-child td,.table colgroup+thead tr:first-child th,.table colgroup+thead tr:first-child td,.table thead:first-child tr:first-child th,.table thead:first-child tr:first-child td{border-top:0;}\n.table tbody+tbody{border-top:2px solid #dddddd;}\n.table .table{background-color:#ffffff;}\n.table-condensed th,.table-condensed td{padding:4px 5px;}\n.table-bordered{border:1px solid #dddddd;border-collapse:separate;*border-collapse:collapse;border-left:0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}.table-bordered th,.table-bordered td{border-left:1px solid #dddddd;}\n.table-bordered caption+thead tr:first-child th,.table-bordered caption+tbody tr:first-child th,.table-bordered caption+tbody tr:first-child td,.table-bordered colgroup+thead tr:first-child th,.table-bordered colgroup+tbody tr:first-child th,.table-bordered colgroup+tbody tr:first-child td,.table-bordered thead:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child td{border-top:0;}\n.table-bordered thead:first-child tr:first-child>th:first-child,.table-bordered tbody:first-child tr:first-child>td:first-child{-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;}\n.table-bordered thead:first-child tr:first-child>th:last-child,.table-bordered tbody:first-child tr:first-child>td:last-child{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;}\n.table-bordered thead:last-child tr:last-child>th:first-child,.table-bordered tbody:last-child tr:last-child>td:first-child,.table-bordered tfoot:last-child tr:last-child>td:first-child{-webkit-border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px;border-bottom-left-radius:4px;}\n.table-bordered thead:last-child tr:last-child>th:last-child,.table-bordered tbody:last-child tr:last-child>td:last-child,.table-bordered tfoot:last-child tr:last-child>td:last-child{-webkit-border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px;border-bottom-right-radius:4px;}\n.table-bordered tfoot+tbody:last-child tr:last-child td:first-child{-webkit-border-bottom-left-radius:0;-moz-border-radius-bottomleft:0;border-bottom-left-radius:0;}\n.table-bordered tfoot+tbody:last-child tr:last-child td:last-child{-webkit-border-bottom-right-radius:0;-moz-border-radius-bottomright:0;border-bottom-right-radius:0;}\n.table-bordered caption+thead tr:first-child th:first-child,.table-bordered caption+tbody tr:first-child td:first-child,.table-bordered colgroup+thead tr:first-child th:first-child,.table-bordered colgroup+tbody tr:first-child td:first-child{-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;}\n.table-bordered caption+thead tr:first-child th:last-child,.table-bordered caption+tbody tr:first-child td:last-child,.table-bordered colgroup+thead tr:first-child th:last-child,.table-bordered colgroup+tbody tr:first-child td:last-child{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;}\n.table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th{background-color:#f9f9f9;}\n.table-hover tbody tr:hover td,.table-hover tbody tr:hover th{background-color:#f5f5f5;}\ntable td[class*=\"span\"],table th[class*=\"span\"],.row-fluid table td[class*=\"span\"],.row-fluid table th[class*=\"span\"]{display:table-cell;float:none;margin-left:0;}\n.table td.span1,.table th.span1{float:none;width:44px;margin-left:0;}\n.table td.span2,.table th.span2{float:none;width:124px;margin-left:0;}\n.table td.span3,.table th.span3{float:none;width:204px;margin-left:0;}\n.table td.span4,.table th.span4{float:none;width:284px;margin-left:0;}\n.table td.span5,.table th.span5{float:none;width:364px;margin-left:0;}\n.table td.span6,.table th.span6{float:none;width:444px;margin-left:0;}\n.table td.span7,.table th.span7{float:none;width:524px;margin-left:0;}\n.table td.span8,.table th.span8{float:none;width:604px;margin-left:0;}\n.table td.span9,.table th.span9{float:none;width:684px;margin-left:0;}\n.table td.span10,.table th.span10{float:none;width:764px;margin-left:0;}\n.table td.span11,.table th.span11{float:none;width:844px;margin-left:0;}\n.table td.span12,.table th.span12{float:none;width:924px;margin-left:0;}\n.table tbody tr.success td{background-color:#dff0d8;}\n.table tbody tr.error td{background-color:#f2dede;}\n.table tbody tr.warning td{background-color:#fcf8e3;}\n.table tbody tr.info td{background-color:#d9edf7;}\n.table-hover tbody tr.success:hover td{background-color:#d0e9c6;}\n.table-hover tbody tr.error:hover td{background-color:#ebcccc;}\n.table-hover tbody tr.warning:hover td{background-color:#faf2cc;}\n.table-hover tbody tr.info:hover td{background-color:#c4e3f3;}\n\n\ntable#vst td {\n    /*border: 1px black solid;*/\n    /*font-family:monospace;*/\n    background-color: white;\n    position: relative;\n    padding: 0px;\n    white-space: nowrap;\n    height: 20px;\n    width: 90px;\n}\ntable#vst th {\n    background-color: white;\n}\n.outer {\n    position: relative;\n    display: block;\n}\n.mydiv {\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 2;\n    text-align: center;\n}\n.time-conflict {\n    border: 2px red dotted;\n    width: 100%;\n    position: absolute;\n    left: -2px;\n    top:  -2px;\n    z-index: 3;\n}\n.topmost {\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 4;\n}\n</style>\n            <script src=\"https://raw.github.com/adius/DOMinate/master/src/dominate.essential.min.js\" type=\"text/javascript\"></script>\n            <div id=\"myTimetable\" style=\"background-color: #FFF; border: 2px solid #D4E0EC; padding: 0px; position: fixed; right: 5px; bottom: 5px; z-index: 1000; \">\n                <div id=\"container\">\n                    <h1>How to use:</h1>\n                    Click the section of the course to add that section to time table.<br><br>\n                    To delete the section from your time table,<br>\n                    click DROP when your mouse is over the section on the timetable.<br><br>\n                    Clicking hyperlinks other than the department names<br>\n                    Or clicking the BACK/NEXT/REFRESH button of the browser<br>\n                    will erase your work\n                </div>\n                <a href=\"#\" id=\"toggle_show\">show/hide</a>\n                <br>\n                <a href=\"#\" id=\"load_confirmed\">load confirmed enrollment</a>\n            </div>").appendTo('body');
  $('#toggle_show').click(function() {
    $('#container').toggle(120);
    visible = !visible;
    return false;
  });
  $('#load_confirmed').click(function() {
    var semcode;
    if (!visible) {
      return false;
    }
    alert("This would clear your current timetable\nAnd it may take some time to finish\nWorks only for the current semester\nLogin required");
    tt = [[], [], [], [], [], [], []];
    tc = [[], [], [], [], [], [], []];
    semcode = window.location.href.match(/https:\/\/w5.ab.ust.hk\/wcq\/cgi-bin\/(\d+)\//)[1];
    $('div#classes').load("https://w5.ab.ust.hk/cgi-bin/std_cgi.sh/WService=broker_si_p/prg/sita_enrol_ta_intf.r?p_stdt_id=&p_reg_acad_yr=20" + semcode.slice(0, 2) + "&p_reg_semes_cde=" + semcode[2], function() {
      var L, LA, T, course_code, courses, dept, i, my_call_back, numeric_code, xml_code, _i, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _results;
      console.log($('div#classes').html());
      xml_code = (_ref = $('div#classes').html().match(/id="xml" value="(.*?)"/)) != null ? _ref[1] : void 0;
      console.log(xml_code);
      if (!xml_code) {
        alert("ERROR: Cannot fetch your confirmed enrollment for this semester\nPlease add the classes manually");
        return false;
      }
      courses = xml_code.match(/&lt;course&gt;(.*?)&lt;\/course&gt;/g);
      if (!courses) {
        courses = xml_code.match(/<course>(.*?)<\/course>/g);
        if (!courses) {
          alert("ERROR: Cannot fetch your confirmed enrollment for this semester\nPlease add the classes manually");
          return false;
        }
      }
      _results = [];
      for (i = _i = 0, _ref1 = courses.length; 0 <= _ref1 ? _i < _ref1 : _i > _ref1; i = 0 <= _ref1 ? ++_i : --_i) {
        course_code = (_ref2 = courses[i].match(/&lt;courseCode&gt;(.*?)&lt;\/courseCode&gt;/)) != null ? _ref2[1] : void 0;
        if (!course_code) {
          course_code = (_ref3 = courses[i].match(/<courseCode>(.*?)<\/courseCode>/)) != null ? _ref3[1] : void 0;
        }
        L = (_ref4 = courses[i].match(/&lt;L&gt;(.*?)&lt;\/L&gt;/)) != null ? _ref4[1] : void 0;
        if (!L) {
          L = (_ref5 = courses[i].match(/<L>(.*?)<\/L>/)) != null ? _ref5[1] : void 0;
        }
        T = (_ref6 = courses[i].match(/&lt;T&gt;(.*?)&lt;\/T&gt;/)) != null ? _ref6[1] : void 0;
        if (!T) {
          T = (_ref7 = courses[i].match(/<T>(.*?)<\/T>/)) != null ? _ref7[1] : void 0;
        }
        LA = (_ref8 = courses[i].match(/&lt;LA&gt;(.*?)&lt;\/LA&gt;/)) != null ? _ref8[1] : void 0;
        if (!LA) {
          LA = (_ref9 = courses[i].match(/<LA>(.*?)<\/LA>/)) != null ? _ref9[1] : void 0;
        }
        dept = course_code.slice(0, 4);
        numeric_code = course_code.slice(4);
        my_call_back = (function(L, T, LA, dept, numeric_code) {
          return function() {
            return $("a[name=" + (dept + numeric_code) + "]").parents('.course').find('.sections').find('tr').each(function() {
              var first_cell_content;
              first_cell_content = $(this).find('td').first().text();
              first_cell_content = first_cell_content.slice(0, first_cell_content.indexOf(' '));
              if (first_cell_content === L || first_cell_content === T || first_cell_content === LA) {
                return $(this).click();
              }
            });
          };
        })(L, T, LA, dept, numeric_code);
        _results.push(go_to(dept, numeric_code, my_call_back));
      }
      return _results;
    });
    return false;
  });
  highlight = function() {
    return this.style.border = "2px solid yellow";
  };
  dehighlight = function() {
    return this.style.border = "0";
  };
  $('tr.sectodd, tr.secteven').css({
    'cursor': 'pointer'
  }).click(click_event);
  bring_to_top = function() {
    return this.style.zIndex = 9999;
  };
  bring_to_back = function() {
    return this.style.zIndex = 500;
  };
  $('div#navigator').hover(bring_to_top, bring_to_back).find('div.depts').find('a').click(function() {
    var _this = this;
    $('div#classes').load(this.href + ' div#classes', function() {
      document.title = _this.href.slice(-4) + document.title.slice(4);
      $('tr.sectodd, tr.secteven').css({
        'cursor': 'pointer'
      }).unbind('click').click(click_event);
      $(window).scrollTop(0);
      return false;
    });
    return false;
  });
} else {
  alert("VST already loaded");
}
